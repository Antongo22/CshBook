using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CshBook.Lessons
{
    /* for начало
    цикл - выполнение блока кода повторно, пока условие истинно.

    for (<целочисленный тип данных> <название переменной> = <значение>; <условие>; <шаг переменной>)
    {
        <блок кода>
    }

     */


    /* Вложенные циклы
     for (<целочисленный тип данных> <название переменной_1> = <значение>; <условие>; <шаг переменной_1>)
    {
        for (<целочисленный тип данных> <название переменной_2> = <значение>; <условие>; <шаг переменной_2>)
        {
            <блок кода>
        }
    }


    вложенных циклов может быть сколько угодно
     */

    internal class ThirdLesson
    {
        public static void Main_()
        {
            for (int i = 0; i < 10; i++)
            {
                Console.WriteLine(i);
            }
            //В консоль будет выведено от 0 до 9

            // шаг в 2
            for (int i = 0; i < 10; i += 2)
            {
                Console.WriteLine(i);
            }

            //В консоль будет выведено: 0, 2, 4, 6, 8


            //в обратном порядке
            for (int i = 10; i > 0; i--)
            {
                Console.WriteLine(i);
            }
            //В консоль будет выведено от 10 до 1


            // вложенный цикл
            for (int i = 0; i < 10; ++i)
            {
                for (int j = 0; j < 10; j++)
                {
                    Console.Write($"{i+j}, ");
                }
                Console.WriteLine();
            }
            /* Вывод
                0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
                1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
                3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
                5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
                6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
                7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
             */
        }
    }

    /*Задачи
    Выведите на экран 10 раз фразу "You are welcome!"
    Выведите на экран n раз фразу "Silence is golden". Число n вводит пользователь.
    Выведите на экран прямоугольник из нулей. Количество строк вводит пользователь, количество столбцов равно 5.

    Вывести на экран фигуру из звездочек:
    *******
    *******
    *******
    *******
    (квадрат из n строк, в каждой строке n звездочек)

    Вывести на экран числа от 1000 до 9999 такие, что среди цифр есть цифра 3.

    Выведите на экран строки вида:
    *******
    ****
    *******
    ****
    *******
    ****
    (всего n строк, звездочек или 7, или 4 по очереди)


    Вывести на экран:
    AAABBBAAABBBAAABBB
    BBBAAABBBAAABBBAAA
    AAABBBAAABBBAAABBB
    (таких строк n, в каждой строке m троек AAA)

    Вывести на экран:
    AAAAAAAAAAAAAAAA
    ABBBBBBBBBBBBBBA
    ABBBBBBBBBBBBBBA
    ABBBBBBBBBBBBBBA
    AAAAAAAAAAAAAAAA
    (количество строк вводит пользователь, ширина прямоугольника в два раза больше высоты)

    Выведите на экран квадрат из нулей и единиц, причем нули находятся только на диагонали квадрата. Всего в квадрате сто цифр. Обе диагонали состоят из 0

    Вывести на экран числа от 1 до 100, которые делятся на 3 или на 5.

    Вывести на экран таблицу умножения для числа n (n вводит пользователь).

    Вывести на экран все четные числа от 1 до n (n вводит пользователь).

    Вывести на экран сумму всех чисел от 1 до n (n вводит пользователь).

    Вывести на экран все числа от 1 до n, которые являются простыми.

    Вывести на экран треугольник из звездочек:

    *
    **
    ***
    ****
    *****
    (количество строк вводит пользователь)

    Вывести на экран числа Фибоначчи до n-го числа (n вводит пользователь).

    Вывести на экран все числа от 1 до n, которые являются палиндромами (читаются одинаково слева направо и справа налево).

    Вывести на экран все числа от 1 до n, которые являются совершенными (сумма делителей числа равна самому числу, например, 6 = 1 + 2 + 3).

    Вывести на экран все числа от 1 до n, которые являются автоморфными (квадрат числа заканчивается на само число, например, 5^2 = 25).

    Вывести на экран все числа от 1 до n, которые являются кубом другого числа.

    Вывести на экран все числа от 1 до n, которые являются степенью двойки.

    Вывести на экран все числа от 1 до n, которые являются степенью тройки.

    Вывести на экран все числа от 1 до n, которые являются степенью пятерки.

    Вывести на экран все числа от 1 до n, которые являются степенью десятки.

    Вывести на экран все числа от 1 до n, которые являются степенью числа 11.

    Вывести на экран все числа от 1 до n, которые являются степенью числа 13.

    Вывести на экран все числа от 1 до n, которые являются степенью числа 17.

    Вывести на экран все числа от 1 до n, которые являются степенью числа 19.

    Вывести на экран все числа от 1 до n, которые являются степенью числа 23.
     */
}
