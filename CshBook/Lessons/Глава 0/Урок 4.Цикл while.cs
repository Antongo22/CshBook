using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CshBook.Lessons
{
    /* while
    Выполняется пока условие написанное после слова while выполняется (даёт True). 
    Таким образом этот цикл может быть бесконечным.

    Конструкция - 
    while (<bool (условие)>)
    {
        #Логика выполнения#
    }

    Пример цикла- 
    int i = 0;
    while (i < 5)
    {
        i++;
    }


    Важно следить за написанием условия и не допускать бесконечности. Однако, мы можем прерывать цикл внутри него с помощью команды break.
    int i = 0;
    while (True)
    {
        i++;
        if (i >= 5)
        {
            break;
        }
    }

    так же, мы можем пропускать итерацию, если хотим с помощью continue
    int j = 0;
    while (j < 10)
    {
        j++;
        if (j % 2 != 0)
        {
            continue;
        }
        Console.WriteLine(j);
    }

    таким образом будут выведены только чётные числа
     */

    /* do while
     
    Так как в while мы прописываем условие, то есть вероятность, что мы ни разу не зайдём в цикл.
    Конечно, эту проблему можно решить, но в C# есть конструкция do while, которая позволяет проверять 
    условия уже после выполнения первой итерации цикла.

    Вот конструкция - 
     
    do 
    {
        #Логика выполнения#
    } while (<bool (условие)>)

    Пример - 
    int count = 0;
    do
    {
        Console.WriteLine("Текущая итерация: " + count);
        count++;
    } 
    while (count < 5);
     */

    internal class FourthLesson
    {
        public static void Main()
        {
            // Задача на while: Вывести квадраты чисел от 1 до 5
            int i = 1;
            while (i <= 5)
            {
                Console.WriteLine("Квадрат числа {0} = {1}", i, i * i);
                i++;
            }

            // Задача на do while: Запрашивать у пользователя число и выводить его квадрат,
            // пока пользователь не введет число, меньшее или равное 0
            int number;
            do
            {
                Console.Write("Введите число для возведения в квадрат (0 или меньше - для выхода): ");
                number = Convert.ToInt32(Console.ReadLine());
                if (number > 0)
                {
                    Console.WriteLine("Квадрат числа {0} = {1}", number, number * number);
                }
            } while (number > 0);
        }
    }

    /* Задачи на while
  
    1. Напишите цикл while, который выведет числа от 1 до 10.

    2. Создайте цикл while, который будет находить сумму чисел от 1 до 100.

    3. Используя цикл while, выведите все нечетные числа от 1 до 20.

    4. Реализуйте бесконечный цикл while, который выводит числа от 1 до бесконечности, но прерывается при достижении числа 15.

    5. Напишите цикл while, который будет запрашивать у пользователя ввод чисел и завершится, когда пользователь введет число 0.

    6. Используя цикл while, выведите последовательность чисел Фибоначчи до тех пор, пока текущее число не превысит 100.

    7. Напишите цикл while, который выведет числа от 10 до 1 (в обратном порядке).

    8. Напишите цикл while, который на каждой итерации делит число на 2, начиная с 1024, и завершится, когда результат станет меньше 1.

    9. Реализуйте программу, которая будет запрашивать у пользователя пароль через цикл while до тех пор, пока пользователь не введет правильный пароль.

    10. Используя цикл while, подсчитайте количество цифр в числе, введенном пользователем.
    */

    /* Задачи на do while

    1. Напишите цикл do while, который выведет "Hello, World!" 5 раз.

    2. Напишите программу, которая запрашивает ввод числа у пользователя и проверяет, положительное оно или отрицательное, до тех пор, пока пользователь не введет число 0.

    3. Напишите программу, которая запрашивает у пользователя пароль через цикл do while до тех пор, пока пароль не будет равен "12345".

    4. Используя do while, создайте цикл, который на каждой итерации уменьшает число на 3, начиная с 30, и завершится, когда число станет меньше или равно 0.

    5. Напишите программу с циклом do while, который на каждой итерации запрашивает у пользователя ввод строки и завершится, когда строка будет "exit".
    */
}
