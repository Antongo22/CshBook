using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CshBook.Lessons
{
    /* Кортежи (Tuples)
    В C# кортежи представляют собой легковесные, неизменяемые структуры данных, которые позволяют хранить несколько элементов разных типов в одном объекте.
    Кортежи полезны, когда вам нужно вернуть несколько значений из метода или временно сгруппировать данные без создания отдельного класса.

    Кортежи могут быть созданы с использованием синтаксиса (item1, item2, ...) или с помощью метода Tuple.Create.
    */

    internal class FifthLesson
    {
        public static void Main()
        {


            // Кортеж с одним элементом
            Tuple<int> singleElementTuple = Tuple.Create(42);

            // Кортеж с несколькими элементами
            Tuple<int, int, int> tuple1 = Tuple.Create(1, 2, 3);

            // Кортеж с элементами разных типов
            Tuple<int, string, double> tuple2 = Tuple.Create(1, "apple", 3.14);

            // Кортеж с вложенными структурами данных
            Tuple<int, Tuple<int, int>> tuple3 = Tuple.Create(1, Tuple.Create(4, 5));

            // Доступ к элементам кортежа
            Tuple<int, int, int, int> myTuple = Tuple.Create(10, 20, 30, 40);
            Console.WriteLine(myTuple.Item1);  // 10
            Console.WriteLine(myTuple.Item4);  // 40

            // Основные операции с кортежами
            Tuple<int, int> tupleA = Tuple.Create(1, 2);
            Tuple<int, int> tupleB = Tuple.Create(3, 4);

            // Объединение кортежей (не поддерживается напрямую, но можно создать новый кортеж)
            Tuple<int, int, int, int> combinedTuple = Tuple.Create(tupleA.Item1, tupleA.Item2, tupleB.Item1, tupleB.Item2);
            Console.WriteLine(combinedTuple);  // (1, 2, 3, 4)

            // Проверка на наличие элемента (не поддерживается напрямую, но можно использовать сравнение)
            bool contains3 = combinedTuple.Item3 == 3;
            Console.WriteLine(contains3);  // True

            // Итерация по элементам кортежа (не поддерживается напрямую, но можно использовать индексы)
            Console.WriteLine(combinedTuple.Item1);  // 1
            Console.WriteLine(combinedTuple.Item2);  // 2
            Console.WriteLine(combinedTuple.Item3);  // 3
            Console.WriteLine(combinedTuple.Item4);  // 4

            // Работа с Random и Math
            Random random = new Random();
            int a = random.Next(0, 10);
            int b = random.Next(0, 10);
            int c = random.Next(0, 10);
            int d = random.Next(0, 10);
            Console.WriteLine($"{a}, {b}, {c}, {d}");

            // Методы Random:
            // Next(): Возвращает неотрицательное случайное целое число.
            // Next(int maxValue): Возвращает неотрицательное случайное целое число, меньшее maxValue.
            // Next(int minValue, int maxValue): Возвращает случайное целое число в диапазоне от minValue до maxValue-1.
            // NextDouble(): Возвращает случайное число с плавающей точкой в диапазоне от 0.0 до 1.0.

            // Пример использования NextDouble()
            double randomDouble = random.NextDouble();
            Console.WriteLine(randomDouble);

            // Работа с Math
            double sqrtResult = Math.Sqrt(4);  // Корень квадратный
            double powResult = Math.Pow(2, 3);  // Возведение в степень
            double pi = Math.PI;  // Число Пи
            double e = Math.E;  // Число E
            Console.WriteLine($"{sqrtResult}, {powResult}, {pi}, {e}");

            // Дополнительные методы Math:
            double absValue = Math.Abs(-5);  // Абсолютное значение
            double sinValue = Math.Sin(Math.PI / 2);  // Синус
            double cosValue = Math.Cos(Math.PI);  // Косинус
            double tanValue = Math.Tan(Math.PI / 4);  // Тангенс
            Console.WriteLine($"{absValue}, {sinValue}, {cosValue}, {tanValue}");

            // Проверка, целое ли число
            double numberToCheck = 42.0;
            bool isInteger = numberToCheck % 1 == 0;
            Console.WriteLine(isInteger);  // True

            // Работа с DateTime
            DateTime now = DateTime.Now;
            Console.WriteLine($"Текущая дата и время: {now}");

            DateTime tomorrow = now.AddDays(1);
            Console.WriteLine($"Завтрашняя дата: {tomorrow}");

            TimeSpan difference = tomorrow - now;
            Console.WriteLine($"Разница во времени: {difference.TotalHours} часов");

            // Форматирование даты
            string formattedDate = now.ToString("dd.MM.yyyy HH:mm:ss");
            Console.WriteLine($"Отформатированная дата: {formattedDate}");
        }

        /* Задачи на кортежи

        1. Создайте кортеж, содержащий три элемента разных типов (например, int, string, double).

        2. Напишите метод, который принимает кортеж из двух элементов и возвращает их сумму (если это числа) или их конкатенацию (если это строки).

        3. Создайте кортеж, содержащий два вложенных кортежа. Доступ к элементам вложенных кортежей.

        4. Напишите программу, которая генерирует случайный кортеж из трех элементов (int, double, string) и выводит их на экран.

        5. Используя кортежи, напишите программу, которая запрашивает у пользователя три числа и возвращает кортеж с их квадратами.

        6. Создайте кортеж, содержащий координаты точки на плоскости (x, y). Напишите метод, который принимает этот кортеж и возвращает расстояние от точки до начала координат.

        7. Напишите программу, которая использует кортежи для представления даты (день, месяц, год) и выводит её в формате "dd.mm.yyyy".

        8. Создайте кортеж, содержащий имя и возраст человека. Напишите метод, который принимает этот кортеж и возвращает строку с приветствием, включающую имя и возраст.

        9. Используя кортежи, напишите программу, которая запрашивает у пользователя два числа и возвращает кортеж с их суммой, разностью, произведением и частным.

        10. Создайте кортеж, содержащий три числа. Напишите метод, который принимает этот кортеж и возвращает кортеж с этими же числами, отсортированными по возрастанию.
        */

        /* Задачи на DateTime

        1. Напишите программу, которая выводит текущую дату и время в формате "dd.MM.yyyy HH:mm:ss".

        2. Напишите программу, которая запрашивает у пользователя дату рождения и вычисляет его возраст.

        3. Напишите программу, которая вычисляет количество дней до нового года.

        4. Напишите программу, которая запрашивает у пользователя две даты и вычисляет разницу между ними в днях.

        5. Напишите программу, которая выводит дату через неделю от текущей даты.

        6. Напишите программу, которая запрашивает у пользователя дату и время и выводит её в формате "dd.MM.yyyy HH:mm:ss".

        7. Напишите программу, которая вычисляет количество секунд, прошедших с начала текущего дня.

        8. Напишите программу, которая запрашивает у пользователя дату и выводит день недели для этой даты.

        9. Напишите программу, которая выводит текущую дату и время в формате "yyyy-MM-ddTHH:mm:ss".

        10. Напишите программу, которая запрашивает у пользователя дату и вычисляет количество дней до этой даты от текущей даты.
        */

        /* Задачи на Math

         1. Напишите программу, которая рандомно генерирует два числа и вычисляет их среднее арифметическое.

         2. Напишите программу, которая рандомно генерирует радиус круга и вычисляет его площадь.

         3. Напишите программу, которая рандомно генерирует три числа и находит максимальное из них.

         4. Напишите программу, которая рандомно генерирует угол в градусах и вычисляет его синус, косинус и тангенс.

         5. Напишите программу, которая рандомно генерирует число и проверяет, является ли оно простым.

         6. Напишите программу, которая рандомно генерирует два числа и вычисляет их наибольший общий делитель (НОД).

         7. Напишите программу, которая рандомно генерирует два числа и вычисляет их наименьшее общее кратное (НОК).

         8. Напишите программу, которая рандомно генерирует число и вычисляет его факториал.

         9. Напишите программу, которая рандомно генерирует число и проверяет, является ли оно палиндромом.

         10. Напишите программу, которая рандомно генерирует число и вычисляет сумму его цифр.
        */
    }
}